<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd
			http://www.springframework.org/schema/jdbc
			http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">
	
	<!-- create table for remember-me -->
	<jdbc:initialize-database data-source="dataSourceImpl" ignore-failures="DROPS">
		<jdbc:script location="classpath:security.sql" />
	</jdbc:initialize-database>
	
	<!--  Spring-Security 的配置 -->

	<!-- 二.授权(非常重要) -->
	<!-- 授权设置， 根据role进行设置 -->
	<!-- 设置授权还可以通过annotation的方式，在具体的接口或者类的方法上面添加 , 例如在CrudUsersServiceInter接口的addUser方法上设置-->
	<!-- 这里仅仅只是设置为，在增加用户的时候，需要ROLE_USER权限 -->
	<!--  <security:global-method-security pre-post-annotations="enabled">
	 	<protect-pointcut expression="execution(* com.bruce.serviceInterface.*Service*.addUser(..))"
		access="ROLE_ADMIN" />
	</security:global-method-security>-->

	<!-- 
	1.auto-config="true"表示引用spring security提供的filter chain。
	2.注意use-expressions=true.表示开启表达式,否则表达式将不可用.
	3.see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html
	 -->	 
	<security:http auto-config="true" use-expressions="true" >
		
		<!-- 登录页面和忘记密码页面不过滤 -->
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/register/**" access="permitAll()" />		
		<security:intercept-url pattern="/auth/add" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/auth/main" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/BruceWangWeb/auth/changePassword" access="hasRole('ROLE_USER','ROLE_ADMIN')"/>
		
		<!-- 添加一个元素<access-denied-handler>，它指明了我们的访问拒绝处理URL--> 
		<!-- <security:access-denied-handler error-page="/accessDenied.jsp"/> -->
		<access-denied-handler ref="accessDeniedHandler"/>
		
		<security:form-login
				login-page="/" 
				authentication-failure-url="/auth/login?error=true"
				default-target-url="/zhangzhi.jsp"/>
				
		<!-- 虚拟URL /auth/logout -->
		<security:logout 
				invalidate-session="true"
				logout-success-url="/"
				logout-url="/auth/logout"/>
		
		<!--  
		<security:logout invalidate-session="true" logout-success-url="/"
			logout-url="/j_spring_security_logout" />
		-->		
	
	</security:http>
	
	<!-- 一.认证 -->
	<!-- 注意能够为authentication-manager 设置alias别名   cache-ref="userCache" -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="myUserDetailsService">
			<!-- 自定义加密方式 -->
			<security:password-encoder ref="mySpringEncoder">
			<!-- 用户名做为盐值 -->
				<security:salt-source user-property="username" />
			</security:password-encoder> 
			<!--  
			<security:jdbc-user-service data-source-ref="dataSourceImpl"
				users-by-username-query="select username,password,enabled,content
													from users 
													where username=?"
				authorities-by-username-query="select username,role,content
														  from users where username=?" 
						cache-ref="userCache" />  -->
		</security:authentication-provider>
	</security:authentication-manager>
	
	<b:bean id="accessDeniedHandler"
     	class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
  		<b:property name="errorPage" value="/accessDenied.jsp"/>
	</b:bean>
	
	<!--  
	<b:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	-->
	<b:bean id="mySpringEncoder"
		class="com.bruce.tool.MySpringEncoder" />
  
	<b:bean id="userCache"
		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<b:property name="cache" ref="userEhCache" />
	</b:bean>
	
	<b:bean id="userEhCache"
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<b:property name="cacheManager" ref="cacheManagerSecurity" />
		<b:property name="cacheName" value="userCache" />
	</b:bean>
	
	<b:bean id="cacheManagerSecurity"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
	<!-- 自定义认证方式   -->
	<b:bean id="myUserDetailsService" class="com.bruce.service.MyUserDetailsService" >
	</b:bean>
</b:beans>
